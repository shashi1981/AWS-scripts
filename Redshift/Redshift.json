{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates an Amazon Redshift cluster within a VPC.",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
					"Label": {
						"default": "Network"
					},
					"Parameters": [
						"VPCID",
						"ClusterSubnetID",
						"InboundTrafficCIDR"
					]
				},
				{
					"Label": {
						"default": "Database"
					},
					"Parameters": [
						"DatabaseName",
						"MasterUsername",
						"MasterUserPassword",
						"DatabasePort"
					]
				},
				{
					"Label": {
						"default": "Cluster"
					},
					"Parameters": [
						"NumberOfNodes",
						"NodeType"
					]
				},
				{
					"Label": {
						"default": "Tags"
					},
					"Parameters": [
						"CostCenterTag",
						"ProjectTag",
						"OwnerTag",
						"EnvironmentTag",
						"RegulatedTag",
						"DataClassificationTag"
					]
				}
			],
			"ParameterLabels": {
				"ClusterSubnetID": {
					"default": "Target Subnet ID"
				},
				"DatabaseName": {
					"default": "Database Name"
				},
				"DatabasePort": {
					"default": "Database Port"
				},
				"InboundTrafficCIDR": {
					"default": "Inbound IP Address Range"
				},
				"MasterUserPassword": {
					"default": "Master User Password"
				},
				"MasterUsername": {
					"default": "Master User Name"
				},
				"NodeType": {
					"default": "Node Type"
				},
				"NumberOfNodes": {
					"default": "Number Of Nodes"
				},
				"VPCID": {
					"default": "VPC ID"
				}
			}
		}
	},
	"Parameters": {
		"ClusterSubnetID": {
			"Description": "Subnet ID of an existing subnet in your Amazon Virtual Private Cloud (VPC).",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"DatabaseName": {
			"AllowedPattern": "([a-z]|[0-9])+",
			"ConstraintDescription": "Must contain a-z or 0-9 only.",
			"Default": "defaultdb",
			"Description": "The name of the first database to be created when the Amazon Redshift cluster is created.",
			"MaxLength": "64",
			"MinLength": "1",
			"Type": "String"
		},
		"DatabasePort": {
			"Default": "5439",
			"Description": "The port that Amazon Redshift will listen on and that will be allowed through the Security Group.",
			"Type": "String"
		},
		"InboundTrafficCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
			"Description": "Allow inbound traffic to the cluster from this CIDR range.",
			"Type": "String"
		},
		"MasterUserPassword": {
			"AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!.*[@/\\\"']).*$",
			"ConstraintDescription": "Must contain only alphanumeric characters.",
			"Description": "The password associated with the master user account for the Amazon Redshift cluster that is being created.",
			"MaxLength": "64",
			"MinLength": "8",
			"NoEcho": "true",
			"Type": "String"
		},
		"MasterUsername": {
			"AllowedPattern": "([a-z])([a-z]|[0-9])*",
			"ConstraintDescription": "Must start with a-z and contain only a-z or 0-9.",
			"Description": "The user name associated with the master user account for the Amazon Redshift cluster that is being created.",
			"MaxLength": "128",
			"MinLength": "1",
			"Type": "String"
		},
		"NodeType": {
			"AllowedValues": [
				"dc1.large",
				"dc1.8xlarge",
				"dc2.xlarge",
				"dc2.8xlarge",
				"ds1.xlarge",
				"ds1.8xlarge",
				"ds2.xlarge",
				"ds2.8xlarge"
			],
			"ConstraintDescription": "Must be a valid Amazon Redshift node type.",
			"Default": "dc1.large",
			"Description": "The node type to be provisioned for the Amazon Redshift cluster.",
			"Type": "String"
		},
		"NumberOfNodes": {
			"Default": "2",
			"Description": "The number of compute nodes in the Amazon Redshift cluster. For a single-node cluster, the NumberOfNodes parameter should be specified as 1. For a multi-node cluster, the NumberOfNodes parameter should be greater than 1.",
			"Type": "Number"
		},
		"VPCID": {
			"Description": "ID of the Virtual Private Cloud.",
			"Type": "AWS::EC2::VPC::Id"
		},
		"CostCenterTag" : {
			"Type" : "String",
			"Description" : "https://help.platforms.engineering/aws-tagging/#aws-platforms-engineering-cost-centers"
		},
		"ProjectTag" : {
			 "Type" : "String",
			 "Description" : "project-name"
		},
		"OwnerTag" : {
			 "Type" : "String",
			 "Description" :  "forward-slash-separated (/) list of santo User IDs or a velocity.ag group ID (not name)."
		},
		"EnvironmentTag" : {
			 "Type" : "String",
			 "Description" :  "Environment - also used to form the path in vault",
			 "AllowedValues": [
				"non-prod",
				"prod"
			 ]
		},
		"RegulatedTag" : {
			 "Type" : "String",
			 "Description" :  "Regulated status",
			 "AllowedValues": [
				"no",
				"gxp",
				"sox"
			]
		},
		"DataClassificationTag" : {
			 "Type" : "String",
			 "Description" :  "Data classification",
			 "AllowedValues": [
				"critical",
				"restricted",
				"internal",
				"public"
			  ]
		}
	},
	"Conditions": {
		"IsMultiNodeCluster": {
			"Fn::Not": [{
				"Fn::Equals": [{
						"Ref": "NumberOfNodes"
					},
					"1"
				]
			}]
		}
	},
	"Resources": {
		"SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPCID"
				},
				"GroupDescription": "Amazon Redshift security group",
				"SecurityGroupIngress": [{
					"CidrIp": {
						"Ref": "InboundTrafficCIDR"
					},
					"FromPort": {
						"Ref": "DatabasePort"
					},
					"ToPort": {
						"Ref": "DatabasePort"
					},
					"IpProtocol": "tcp"
				}],
        "Tags" : [
          { "Key" : ":cost-center", "Value" : { "Ref" : "CostCenterTag" }},
          { "Key" : ":owner", "Value" : { "Ref" : "OwnerTag" }},
          { "Key" : ":env", "Value" : { "Ref" : "EnvironmentTag" }},
          { "Key" : ":project", "Value" : { "Ref" : "ProjectTag" }},
          { "Key" : ":regulated", "Value" : { "Ref" : "RegulatedTag" }},
          { "Key" : ":data-classification", "Value" : { "Ref" : "DataClassificationTag" }}
			]
			}
		},
		"ClusterSubnetGroup": {
			"Type": "AWS::Redshift::ClusterSubnetGroup",
			"Properties": {
				"Description": "RedshiftClusterSubnetGroup",
				"SubnetIds": [{
					"Ref": "ClusterSubnetID"
				}],
		"Tags" : [
          { "Key" : ":cost-center", "Value" : { "Ref" : "CostCenterTag" }},
          { "Key" : ":owner", "Value" : { "Ref" : "OwnerTag" }},
          { "Key" : ":env", "Value" : { "Ref" : "EnvironmentTag" }},
          { "Key" : ":project", "Value" : { "Ref" : "ProjectTag" }},
          { "Key" : ":regulated", "Value" : { "Ref" : "RegulatedTag" }},
          { "Key" : ":data-classification", "Value" : { "Ref" : "DataClassificationTag" }}
			]
			}
		},
		"RedshiftCluster": {
			"Type": "AWS::Redshift::Cluster",
			"DependsOn": "ClusterSubnetGroup",
			"Properties": {
				"ClusterType": {
					"Fn::If": [
						"IsMultiNodeCluster",
						"multi-node",
						"single-node"
					]
				},
				"NumberOfNodes": {
					"Fn::If": [
						"IsMultiNodeCluster",
						{
							"Ref": "NumberOfNodes"
						},
						{
							"Ref": "AWS::NoValue"
						}
					]
				},
				"NodeType": {
					"Ref": "NodeType"
				},
				"DBName": {
					"Ref": "DatabaseName"
				},
        "Encrypted" : true,
				"MasterUsername": {
					"Ref": "MasterUsername"
				},
				"MasterUserPassword": {
					"Ref": "MasterUserPassword"
				},
				"PubliclyAccessible": "false",
				"Port": {
					"Ref": "DatabasePort"
				},
				"VpcSecurityGroupIds": [{
					"Ref": "SecurityGroup"
				}],
				"ClusterSubnetGroupName": {
					"Ref": "ClusterSubnetGroup"
				},
				"IamRoles":["arn:aws:iam::897621846278:role/breeding-prd-redshift-role"],
			"Tags" : [
			  { "Key" : ":cost-center", "Value" : { "Ref" : "CostCenterTag" }},
			  { "Key" : ":owner", "Value" : { "Ref" : "OwnerTag" }},
			  { "Key" : ":env", "Value" : { "Ref" : "EnvironmentTag" }},
			  { "Key" : ":project", "Value" : { "Ref" : "ProjectTag" }},
			  { "Key" : ":regulated", "Value" : { "Ref" : "RegulatedTag" }},
			  { "Key" : ":data-classification", "Value" : { "Ref" : "DataClassificationTag" }}
				]
			}
		}
	},
	"Outputs": {
		"RedshiftHost": {
			"Description": "Amazon Redshift cluster endpoint address",
			"Value": {
				"Fn::GetAtt": [
					"RedshiftCluster",
					"Endpoint.Address"
				]
			}
		},
		"RedshiftPort": {
			"Description": "Amazon Redshift cluster endpoint port",
			"Value": {
				"Fn::GetAtt": [
					"RedshiftCluster",
					"Endpoint.Port"
				]
			}
		},
		"RedshiftDatabaseName": {
			"Description": "Amazon Redshift cluster database name",
			"Value": {
				"Ref": "DatabaseName"
			}
		},
		"RedshiftUsername": {
			"Description": "Amazon Redshift cluster user name",
			"Value": {
				"Ref": "MasterUsername"
			}
		},
		"RedshiftClusterID": {
			"Description": "Amazon Redshift cluster ID",
			"Value": {
				"Ref": "RedshiftCluster"
			}
		}
	}
}
